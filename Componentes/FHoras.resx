<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelDados1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>