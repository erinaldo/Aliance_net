<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pFechar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4Oxvx+H22l7dJAgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAC5klEQVRIS8WT2U8TURTG+Uv8E3w0Sowv
        EFxwixhRQ2OotINSE6VpB3BiArZMgUZMWQahNVLBFku0oqRlkQhYxEQfWDREYwI8WE00vvB+nO/gHalN
        w7Ak3uTLvRzmfr+z3Ob9l/U1FaSPs36ajdXSn9DurF8ro/RjLsbmApB8JFGk6eLugITpi4cW0rzHqcN1
        jBorDpLTUrRzwEjURQMdds745ZBCq+MaLT5toZhqzTBvVFVyyzJJkkSXysvp9KmT5uDIGq1Ai9a+zfAO
        SKKtyjBQ6nVzxZMFKC44sDkE5jCDsZgFAGOa07iMitDCkVA9V1Z1uZjN8/NNANBzCKZ4RRAMBQBn8T8R
        76k5w+amAb7qQ3wRBiJbZCpdKDJiIo5qATBdQYtcwC8Gl6aCMguwZqmAASIm4gDjW9wxNQOsGzVHqM62
        n4cNaR6JblasP9Ehv52EYB5WzvEzbijbZw4QmnRTQ6SMnM2lhgGAFrnQuIyMEccecBzm6pwlezc3j77x
        EgCBhIMh6C8y9bnOM6BaO0G3eq2GKcQ/QN18S4Cu8WqGPJhQKDms0Z3e2yR3l5ASLmWIr8HOLYFgfLVw
        D58lWc0NCb9WCIK5AEDv00sUm35M/iE7AwBy9njIH04aAMh9RYd3juvfvCV3cCobtNEUgqE6aKXkfITu
        P+vlMwAw7xxbpbZYilsEiK/Wprf0nX5niRoH5xlyvTWeCbk7WMl9h2Amzt0JL2n9XUb2uBycTDNgbGaB
        Xk2nGAghjh0QVGNXB/5ChMG/wlBVTebe2/x6FZE5ak0uU3soTh9WftLo3HfDvC+Vpv7JLxR4sshtygCI
        5VDPktRUlCHEyuuOks2rGq0AYOHTGrUnPhsAKDyxzBUAUOl/nnvouRZaxBB9yMgeZqhItAlAAbgWGNk6
        QLwUAOIT6/1GRYBsHDK+2xYAy9nSR57QMPca1QgIdvyN7LOGvN2F5wgzSA5E+XnCuNJzb+fm5lde3m9e
        AEHejo7pkwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhGAAYAIcAAHxeOVpEQWdMQHRWRXRYU39hQXRiX39vZ4BMHoNQJYhYLIxeNI5iOKdZHa1nG7hk
        JJRrQpl3VYd5ca5/RqJ0U7x4SdF2FaeAXamEV7yDS7OBUbGKXr6QQKiEZqyGZaqJYauJa7mRY7uSb7KW
        esuFLMiHOdSZPNmUNd2dOOGGJPWLI/6dNeSoPemmPu6nPvuqK/aoMvCpOvavPvuuNPmxN/u3MvmzP/m1
        Pvu5Nfu7N82NQsSeWM+lSdSiQdSlSNunQdKtc9Sxf+CVR+itVP6uQfWzQvi9Qf66Q/y+RPy+Rf64SeW3
        cf7DMP7LNvPCSvvDRP3BRf7FTvvMR/3IQv7IXfvRTPvbTvnSVPveVvzdVf7QePzhU/zmXv7waa6XibKf
        ie/JhP7ah/7cm+/Vo/71lP7+mfvjrf7urPrpuP74oP78of7+pf//8OWSEJVyMPX1xPX1oAAABwUGSgAA
        AEB8fLqrzQAAAPXzzEB8fPXz+DaIFv3gAPXz+DaIWvXzuDaIKgAAB0B8fPX2HAAAFAAAAQAAAAAAAAAA
        EAAAAJDq4wAAAAAAAAAAAPXzrAAAAfX17DkEV+VuLeVvGgELCwAAUgAAAAEOpuWSEJVtsPX2bPX2SOWy
        BAAAUgAAAAEOpuWSEJVtsPX2jPX2aEFEWkBMZ0VWdFNYdEFhf19idGdvfx5MgCVQgyxYiDRejDhijh1Z
        pxtnrSRkuEJrlFV3mXF5h0Z/rlN0okl4vBV20V2Ap1eEqUuDvFGBs16KsUCQvmaEqGWGrGGJqmuJq2OR
        uW+Su3qWsiyFyzmHyDyZ1DWU2Tid3SSG4SOL9TWd/j2o5D6m6T6n7iuq+zKo9jqp8D6v9jSu+zex+TK3
        +z+z+T61+TW5+ze7+0KNzViexEmlz0Gi1Eil1EGn23Ot0n+x1EeV4FSt6EGu/kKz9UG9+EO6/kS+/EW+
        /Em4/nG35eWsNeW6XAgLCwAAAAABAPX1pAAAAuWyGeWsNeW6XAgLCwAAAAABAPX1xAAAAuWyGeWyBPX1
        wCH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAABsACwAAAAAGAAYAAAIxQDZCBxIUMQFD14IKlw4MEOQMWfE
        LAnBsCIbDWjMFBAwoIKWCRYXAgETgCAFKhFCDhwRhsBCISVUCvwwxMDCDSskyMSgBITPnz5VHJD55QcU
        MmvUpCnTpYkFmQJ1zHiBI0cNI1mYAIAqkAOSJ1WkTKHhgOvAHVewWEmSwCzBKFy2MHBLsIETEgvoDmzQ
        I0ZevWwa8JDxV28DHzYK021g4sZcwA1QQAAssAGLIx0oN2hxQoFmF4oXFyEyGTKMFAgos3nwQGVAADs=
</value>
  </data>
</root>